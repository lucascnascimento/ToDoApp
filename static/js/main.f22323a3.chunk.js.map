{"version":3,"sources":["Components/Layout/Navbar.js","Context/Todo/todoContext.js","Context/Alert/alertContext.js","Components/Layout/Alert.js","Components/Todos/CreateTodo.js","Components/Todos/TodoItem.js","Components/Todos/TodosList.js","Components/Pages/Home.js","Components/Pages/About.js","Context/Todo/todoReducer.js","Context/types.js","Context/Todo/TodoState.js","Context/Alert/alertReducer.js","Context/Alert/AlertState.js","App.js","index.js"],"names":["Navbar","icon","title","useEffect","elems","document","querySelectorAll","M","Sidenav","init","className","href","data-target","to","id","todoContext","createContext","alertContext","Alert","alert","useContext","AlertContext","msg","require","CreateTodo","TodoContext","useState","project","setProject","priority","setPriority","Date","creationDate","setCreationDate","description","setDescription","due","setDue","onChange","e","target","name","value","clearState","onSubmit","preventDefault","isDescriptionOk","isDueOk","setAlert","getFullYear","getMonth","getDate","getTime","nextId","todoItem","completionDate","isComplete","addTodo","htmlFor","type","checked","selected","date","dateFormat","TodoItem","todo","priorityField","dueField","creationField","descriptionField","completionField","buttonsField","todoItemColor","setTodoItemColor","renderDate","day","month","year","deleteItem","deleteTodo","changeColors","onClick","toggleTodo","TodosList","todos","map","key","reverse","Home","About","src","class","state","action","list","todoList","concat","payload","index","findIndex","o","splice","TodoState","props","useReducer","TodoReducer","dispatch","Provider","todoInfo","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f22323a3.chunk.js","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport '../../css/style.css'\r\n\r\n\r\nconst Navbar = ({icon, title}) => {\r\n\t\tuseEffect(() => {\r\n\t\t\t// Init Tabs Materialize JS\r\n\t\t\t// let btnCollapse = document.querySelectorAll(\".sidenav\");\r\n\t\t\t// M.Sidenav.init(btnCollapse);\r\n\t\t\t// console.log('ok')\r\n\t\t\tvar elems = document.querySelectorAll('.sidenav');\r\n    \tvar instances = M.Sidenav.init(elems);\r\n\t\t});\r\n\r\n    return (\r\n\t\t\t<div>\r\n\t\t\t\t<nav className='teal darken-2'>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<div className='nav-wrapper'>\r\n\t\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t\t<a href=\"\" className=\"brand-logo\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"tiny material-icons hide-on-med-and-down\">{icon}</i>\r\n\t\t\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* Hamburguer menu button */}\r\n\t\t\t\t\t\t\t<a className=\"hide-on-large-only sidenav-trigger cursor-pointer\" data-target='slide-out'>\r\n\t\t\t\t\t\t\t\t<i className='material-icons'>menu</i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<ul className=\"right hide-on-med-and-down\">\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Link to='/'>Home</Link>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Link to='/About'>About</Link>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\r\n\t\t\t\t{/* Side Nav */}\r\n\t\t\t\t<ul id=\"slide-out\" className=\"sidenav\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to='/'>Home</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<Link to='/Help'>Help</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<Link to='/About'>About</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import {createContext} from 'react'\r\n\r\nconst todoContext = createContext()\r\n\r\nexport default todoContext","import {createContext} from 'react'\r\n\r\nconst alertContext = createContext()\r\n\r\nexport default alertContext","import React, {useContext} from 'react'\r\nimport AlertContext from '../../Context/Alert/alertContext'\r\n\r\n\r\nconst Alert = () =>{\r\n  const alertContext = useContext(AlertContext)\r\n\r\n  const {alert} = alertContext;\r\n\r\n  return(\r\n    alert !== null && (\r\n      <div className={'card red lighten-1 center white-text'}>\r\n        <i className='material-icons small inline-icon'>error</i>\r\n        <span className='inline-icon'>{alert.msg}</span>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Alert","import React, {useState, useContext} from 'react'\r\nimport TodoContext from '../../Context/Todo/todoContext'\r\nimport nextId from 'react-id-generator'\r\nimport DatePicker from 'react-datepicker'\r\nimport Alert from '../Layout/Alert'\r\nimport AlertContext from '../../Context/Alert/alertContext'\r\n\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\nimport '../../css/style.css'\r\n\r\nrequire('react-datepicker/dist/react-datepicker.css')\r\n\r\nconst CreateTodo = () => {\r\n\r\n  const todoContext = useContext(TodoContext)\r\n  const alertContext = useContext(AlertContext)\r\n\r\n  const [project, setProject] = useState(' ')\r\n  const [priority, setPriority] = useState('High')\r\n  const [creationDate, setCreationDate] = useState(new Date())\r\n  const [description, setDescription] = useState(' ')\r\n  const [due, setDue] = useState(null)\r\n\r\n  // Handles form state update\r\n  const onChange = (e) => {\r\n    switch (e.target.name) {\r\n      case 'project':\r\n        setProject(e.target.value)\r\n        break;\r\n      case 'priority':\r\n        setPriority(e.target.value)\r\n        break;\r\n      case 'description':\r\n        setDescription(e.target.value)\r\n        break;\r\n      case 'due':\r\n        setDue(e.target.value)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Submit the form and passes the info to the state\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    let isDescriptionOk = true;\r\n    let isDueOk = true;\r\n    \r\n    // Check if the description is empty\r\n    if(description === ' '){\r\n      alertContext.setAlert('Please enter a description!', 'light')\r\n      isDescriptionOk = false;\r\n    }\r\n    // Check if the due date comes after the creation date\r\n    if (due != null) {\r\n      if (due.getFullYear() === creationDate.getFullYear() &&\r\n      due.getMonth() === creationDate.getMonth() &&\r\n      due.getDate() === creationDate.getDate()\r\n      ){\r\n        isDueOk = true\r\n      }\r\n      else if (due.getTime() < creationDate.getTime()) {\r\n        alertContext.setAlert(\"Time machines doesn't exist! Please enter a valid due date\", 'light')\r\n        isDueOk = false\r\n      }\r\n    }\r\n    // Submit the info and clean the input fields\r\n    if(isDescriptionOk && isDueOk){\r\n      let id = nextId(); \r\n\r\n      const todoItem =  {\r\n        project: project,\r\n        priority: priority,\r\n        creationDate: creationDate,\r\n        completionDate: null,\r\n        description: description,\r\n        due: due,\r\n        isComplete: false,\r\n        id: id,\r\n      }\r\n\r\n      todoContext.addTodo(todoItem)\r\n      clearState() \r\n    }\r\n  }\r\n\r\n  // Resets the state\r\n  const clearState = () => {\r\n    setProject(' ')\r\n    setPriority('High')\r\n    setCreationDate(new Date())\r\n    setDescription(' ')\r\n    setDue(null)\r\n  }\r\n\r\n  return (\r\n    <div className='card padding-top-sm margin-top-sm'>\r\n      <div className='row'>\r\n        <form onSubmit={onSubmit}>\r\n          <Alert />\r\n          {/* First Row */}\r\n          <div className='row'>\r\n            {/* Radio buttons */}\r\n                <div className=\"col m6 s12 row\">\r\n                  <label htmlFor=\"priorityContainer\">Priority:</label>\r\n                  <div className=\"flex-container-spc-evnly\" id='priorityContainer'>\r\n                    <label htmlFor=\"radioHigh\">\r\n                      <input type=\"radio\" name=\"priority\" id=\"radioHigh\" value='High'\r\n                        onChange={onChange}\r\n                        checked={priority === \"High\"}\r\n                        className='red-text'\r\n                        />\r\n                      <span>High</span>\r\n                    </label>\r\n                    <label htmlFor=\"radioMedium\">\r\n                      <input type=\"radio\" name=\"priority\" id=\"radioMedium\" value='Medium'\r\n                        onChange={onChange}\r\n                        checked={priority === \"Medium\"}\r\n                        />\r\n                      <span>Medium</span>\r\n                    </label>\r\n                    <label htmlFor=\"radioLow\">\r\n                      <input type=\"radio\" name=\"priority\" id=\"radioLow\" value='Low'\r\n                        onChange={onChange}\r\n                        checked={priority === \"Low\"}\r\n                        />\r\n                      <span>Low</span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n            <div className='input-field col m6 s12'>\r\n              <input type='text' name='project' id='project' value={project} onChange={onChange}></input>\r\n              <label htmlFor='project'>Project Tag: </label>\r\n            </div>\r\n          </div>\r\n          {/* Second Row */}\r\n          <div className='row'>\r\n            <div className='input-field col s12'>\r\n              <input type='text' name='description' id='description' value={description} onChange={onChange}></input>\r\n              <label htmlFor='description'>Description: </label>\r\n            </div>\r\n          </div>\r\n          {/* Third Row */}\r\n          <div className='row'>\r\n            <div className='col m4 s6'>\r\n              <label>Creation date: </label>\r\n              <DatePicker selected={creationDate} value={creationDate} onChange={date => setCreationDate(date)} dateFormat=\"yyyy/MM/dd\"/>\r\n            </div>\r\n            <div className='col m4 s6'>\r\n              <label>Due: </label>\r\n              <DatePicker selected={due} value={due} onChange={date => setDue(date)} dateFormat=\"yyyy/MM/dd\"/>\r\n            </div>\r\n            <div className='col m4 s12'>\r\n              <button className=\"btn-large waves-effect valign-wrapper center-align btn-full-width black\" type=\"submit\" name=\"action\" value='Add ToDo'>Add ToDo\r\n                <i className=\"material-icons right\">send</i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default CreateTodo\r\n","import React, {useState, useContext, useEffect}  from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoContext from '../../Context/Todo/todoContext'\r\n\r\n\r\nconst TodoItem = ({todo}) => {\r\n\tconst todoContext = useContext(TodoContext)\r\n\r\n\tconst [todoItemColor, setTodoItemColor] = useState({\r\n\t\tpriorityField: \" \",\r\n\t\tdueField: \"grey lighten-4\",\r\n\t\tcreationField: \"grey lighten-5\",\r\n\t\tdescriptionField: \"grey lighten-4\",\r\n\t\tcompletionField: \"grey lighten-5\",\r\n\t\tbuttonsField: \"grey lighten-3\",\r\n\t})\r\n\r\n\tuseEffect (() => {\r\n\t\tif (priority === 'High') {\r\n\t\t\tsetTodoItemColor({...todoItemColor, priorityField:'red'})\r\n\t\t}\r\n\t\telse if (priority === 'Medium'){\r\n\t\t\tsetTodoItemColor({...todoItemColor, priorityField:'yellow'})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tsetTodoItemColor({...todoItemColor, priorityField:'green'})\r\n\t\t}\r\n\t}, [todoItemColor.priorityField])\r\n    \r\n\tlet {\r\n\t\tcompletionDate, \r\n\t\tcreationDate, \r\n\t\tdescription, \r\n\t\tdue,\r\n\t\tid,\r\n\t\tisComplete,\r\n\t\tpriority, \r\n\t\tproject, \r\n\t} = todo;\r\n\r\n\t// Renders the date in a more user friendly way\r\n\tconst renderDate = (date) => {\r\n\t\tif (date !== null) {\r\n\t\t\tlet day = date.getDate()\r\n\t\t\tlet month = date.getMonth()\r\n\t\t\tlet year = date.getFullYear()\r\n\t\t\treturn `${year}-${month+1}-${day}`\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn ' '\r\n\t\t}    \r\n\t}\r\n\r\n\t// Deletes an item\r\n\tconst deleteItem = () =>{\r\n\t\ttodoContext.deleteTodo(id)\r\n\t}\r\n\r\n\t// Toggles todo completion state\r\n\tconst toggleCompletion = () =>{\r\n\t\tisComplete = !isComplete\r\n\t\tcompletionDate = new Date()\r\n\t\tchangeColors()\r\n\t\ttodoContext.toggleTodo({\r\n\t\t\tid: id,\r\n\t\t\tisComplete: isComplete,\r\n\t\t\tcompletionDate: completionDate\r\n\t\t})\r\n\t}\r\n\r\n\t// Changes de color of the todo item\r\n\tconst changeColors = () =>{\r\n\t\tsetTodoItemColor({\r\n\t\t\tdueField: \"light-green lighten-4\",\r\n\t\t\tcreationField: \"light-green lighten-5\",\r\n\t\t\tdescriptionField: \"light-green lighten-4\",\r\n\t\t\tcompletionField: \"light-green lighten-5\",\r\n\t\t\tbuttonsField: \"light-green lighten-3\",\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='card'>\r\n\t\t\t<div className=\"flex-row\">\r\n\t\t\t\t<div className={`flex-col m_10 s_10 pd-left-sm ${todoItemColor.priorityField}`}>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={`flex-col m_20 s_45 pd-left-sm ${todoItemColor.dueField}`}>\r\n\t\t\t\t\t<label htmlFor=\"\">Due</label>\r\n\t\t\t\t\t<p className=''>{renderDate(due)}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={`flex-col m_20 s_45 pd-left-sm ${todoItemColor.creationField}`}>\r\n\t\t\t\t\t<label htmlFor=\"\">Creation</label>\r\n\t\t\t\t\t<p className=''>{renderDate(creationDate) + ' '}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={`flex-col m_50 s_100 pd-left-sm ${todoItemColor.descriptionField}`}>\r\n\t\t\t\t\t<label htmlFor=\"\">Description</label>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{project !== \" \" && \r\n\t\t\t\t\t\t\t<span className=\"chip\">{`@${project} `}</span>\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t\t{`${description}`}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={`flex-col m_20 s_100 pd-left-sm ${todoItemColor.completionField}`}>\r\n\t\t\t\t\t<label htmlFor=\"\">Completion</label>\r\n\t\t\t\t\t<p className=''>{renderDate(completionDate) + ' '}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={`row ${todoItemColor.buttonsField}`}>\r\n\t\t\t\t{!isComplete ? \r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<a onClick={toggleCompletion} className='col m1 center push-m10 green-text cursor-pointer'>\r\n\t\t\t\t\t\t\t<i className=\"small material-icons\">done</i>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a onClick={deleteItem} className='col m1 center push-m10 red-text cursor-pointer'>\r\n\t\t\t\t\t\t\t<i className=\"small material-icons\">delete</i>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div> :\r\n\t\t\t\t\t<a onClick={deleteItem} className='col m1 center push-m11 red-text cursor-pointer'>\r\n\t\t\t\t\t\t<i className=\"small material-icons\">delete</i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nTodoItem.propTypes = {\r\n\ttodo: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default TodoItem\r\n","import React, {useContext} from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport TodoContext from '../../Context/Todo/todoContext'\r\n\r\nconst TodosList = () => {\r\n  const todoContext = useContext(TodoContext)\r\n\r\n  const {todos} = todoContext\r\n\r\n  return (\r\n    <div>\r\n      {todos.map(todo => {\r\n        return <TodoItem key={todo.id} todo={todo} />\r\n      }).reverse()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodosList\r\n","import React, {Fragment} from 'react'\r\nimport CreateTodo from '../Todos/CreateTodo'\r\nimport TodosList from '../Todos/TodosList'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <CreateTodo />\r\n        <TodosList />\r\n      </Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"row\">\r\n        <div className=\"col m4 hide-on-small-only center-align\">\r\n          <img className=\"responsive-image circle avatar-width margin-top-sm\" src=\"https://avatars3.githubusercontent.com/u/43356441?s=460&v=4\"/>\r\n        </div>\r\n        <div className=\"col m6\">\r\n          <h3>About</h3>\r\n          <p className='justify-text'>\r\n            Hi, I'm Lucas. I'm a mecathronics engineer student who has recently discovered a huge interest in web development. What you are seeing and using is my first React application - Ok I've made other simpler ones but, for me, that is the one that counts as the first one. This little project (the classical ToDo application) helped me ground some basics of react and challenged me to go beyond of what was my field of knowledge. And what exactly was my goal with this project? I was aiming to understand better the Context API so to do that I designed this app to have a global state that would hold all the todos the user added. The app has basically four components, the navbar which provides the links to the other pages of the aplication, the createTodo.js that is responsible for creating the todo and validating the user input, the listOfItems.js which sorts and render the last component, the todoItem.js, which renders the info of each individual todo that is stored in the global state array. All of the graphical part of this project was done using MaterializeCSS (first time using it as well). This was a project that I really enjoyed doing and I'm planning in the future to add a option to edit the todo and maybe the option to add a pomodoro timer to track each task.\r\n          </p>\r\n          <p className='justify-text'>\r\n            Don´t forget to check out my LinkedIn and my github repo ;)\r\n          </p>\r\n        </div>\r\n      </div>\r\n        <div className=\"row\">\r\n          <div className=\"divider\">\r\n  \r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className='center-align'>\r\n            <a href=\"https://github.com/lucascnascimento\" className=\"col s6 right-align\">\r\n              <i class=\"fab fa-github-square fa-3x black-text\"></i>\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/lucas-nascimento-36aaaa14b/\" className=\"col s6 left-align\">\r\n              <i class=\"fab fa-linkedin fa-3x black-text\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO,\r\n  EDIT_TODO\r\n} from '../types'\r\n\r\nexport default (state, action) => {\r\n  switch(action.type){\r\n    case ADD_TODO:{\r\n      const list = state.todoList.concat(action.payload)\r\n      return {\r\n        ...state,\r\n        todoList: list\r\n      }}\r\n    case DELETE_TODO:{\r\n      const id = action.payload\r\n      let index = state.todoList.findIndex((o)=>{\r\n        return o.id === id\r\n      })\r\n      if (index !== -1){\r\n          state.todoList.splice(index, 1)\r\n      }\r\n      return {\r\n        ...state\r\n      }}\r\n    case TOGGLE_TODO:{\r\n      const {id, isComplete, completionDate} = action.payload\r\n      let index = state.todoList.findIndex((o)=>{\r\n        return o.id === id\r\n      })\r\n      \r\n      if (index !== -1){\r\n        state.todoList[index].isComplete = isComplete\r\n        state.todoList[index].completionDate = completionDate\r\n      }\r\n      return {\r\n        ...state\r\n      }}\r\n    default:\r\n      return state;\r\n  }\r\n}","export const ADD_TODO = 'ADD_TODO'\r\nexport const DELETE_TODO = 'DELETE_TODO'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\r\n","import React, {useReducer} from 'react'\r\nimport TodoContext from './todoContext'\r\nimport TodoReducer from './todoReducer'\r\nimport {\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    TOGGLE_TODO,\r\n    EDIT_TODO\r\n} from '../types'\r\n\r\nconst TodoState = props => {\r\n    const initialState = {\r\n        todoList: []\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(TodoReducer, initialState)\r\n\r\n    // Add Todo\r\n    const addTodo = (todoItem) => {\r\n        dispatch({\r\n            type: ADD_TODO,\r\n            payload: todoItem\r\n        })\r\n    }\r\n\r\n    // Delete Todo\r\n    const deleteTodo = (id) => {\r\n        dispatch({\r\n            type: DELETE_TODO,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    // Toggle Todo\r\n    const toggleTodo = (todoInfo) => {\r\n        dispatch({\r\n            type: TOGGLE_TODO,\r\n            payload: todoInfo\r\n        })\r\n    }  \r\n\r\n    return <TodoContext.Provider value={{\r\n        todos: state.todoList,\r\n        addTodo,\r\n        deleteTodo,\r\n        toggleTodo\r\n    }}>\r\n        {props.children}\r\n    </TodoContext.Provider>\r\n}\r\n\r\nexport default TodoState\r\n","import {\r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n} from '../types'\r\n\r\nexport default(state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload\r\n    case REMOVE_ALERT:\r\n      return null\r\n    default:\r\n      return state;\r\n  }\r\n}","import React, {useReducer} from 'react'\r\nimport AlertContext from './alertContext'\r\nimport AlertReducer from './alertReducer'\r\nimport {\r\n  SET_ALERT,\r\n  REMOVE_ALERT\r\n} from '../types'\r\n\r\nconst AlertState = props => {\r\n  const initialState = null\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState)\r\n\r\n  // Set Alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: {msg, type}\r\n    })\r\n\r\n    setTimeout(() => dispatch({type: REMOVE_ALERT}), 5000)\r\n  }\r\n\r\n  return <AlertContext.Provider\r\n  value={{\r\n    alert: state,\r\n    setAlert\r\n  }}\r\n  >\r\n    {props.children}\r\n  </AlertContext.Provider>\r\n}\r\n\r\nexport default AlertState","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport Navbar from './Components/Layout/Navbar'\r\nimport Home from './Components/Pages/Home'\r\nimport About from './Components/Pages/About'\r\n\r\nimport TodoState from './Context/Todo/TodoState'\r\nimport AlertState from './Context/Alert/AlertState'\r\n\r\nconst App = () => {\r\n  return (\r\n    <AlertState>\r\n      <TodoState>\r\n        <Router>\r\n        <Navbar title='TodoApp' icon='event_available'/>\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path='/' component={Home}/>\r\n              <Route exact path='/about' component={About}/>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </TodoState>\r\n    </AlertState>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'materialize-css/dist/css/materialize.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}